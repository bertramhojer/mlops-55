[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "mlops-55"
version = "0.1.0"
description = "Add your description here"
authors = [
  { name = "Andreas", email = "your@email.com" },
  { name = "Bertram", email = "your@email.com" },
  { name = "Rachael", email = "your@email.com" },
]
readme = "README.md"
requires-python = ">=3.12"


dependencies = [
    "pydantic",
    "pydantic-settings",
    "transformers==4.48.0",
    "datasets",
    "typer",
    "lightning>=2.5.0.post0",
    "scikit-learn>=1.6.1",
    "hydra-core>=1.3.2",
    "rich>=13.9.4",
    "loguru>=0.7.3",
    "omegaconf>=2.3.0",
    "wandb>=0.19.3",
    "dvc",
    "dvc-gs",
    "streamlit",
]

[project.optional-dependencies]
gpu = [
    "torch",
    "bitsandbytes>=0.43.2",
    "flash-attn<=2.6.2",
]
cpu = [
    "torch",
]

[dependency-groups]
dev = [
    "ruff",
    "codespell",
    "pre-commit",
    "ipython",
    "ipykernel",
    "invoke",
]

test = [
    "pytest",
    "pytest-check>=2.4.1",
    "coverage",
    "python-dotenv",
    "pipreqs",
    "mypy",
]

cpu = [
    "torch",
]

frontend = [
    "streamlit>=1.28.2",
    "pandas>=2.1.3",
    "google-cloud-run>=0.10.5",
]

docs = [
  "mkdocs-material",
  "mkdocs-glightbox",
  "mkdocs-material-extensions",
  "pymdown-extensions",
  "mkdocs-same-dir",
  "mkdocs-git-revision-date-localized-plugin",
  "mkdocs-exclude",
  "markdown-exec[ansi]"
]

[tool.uv]
conflicts = [
  [
    { extra = "cpu" },
    { extra = "gpu" },
  ],
]
default-groups = ["dev", "test", "docs", "cpu"]
no-build-isolation-package = ["flash-attn"]

[tool.uv.sources]
torch = [
    { index = "pytorch-cpu", extra = "cpu" },
    { index = "pytorch-cu118", extra = "gpu" },
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu118"
url = "https://download.pytorch.org/whl/cu118"
explicit = true

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
select = [
    "F",
    "E",
    "W",
    "C90",
    "I",
    "N",
    "D",
    "UP",
    "YTT",
    "ASYNC",
    "S",
    "BLE",
    "B",
    "A",
    "COM",
    "C4",
    "DTZ",
    "T10",
    "DJ",
    "EM",
    "EXE",
    "FA",
    "ISC",
    "ICN",
    "LOG",
    "PIE",
    "PYI",
    "PT",
    "Q",
    "RSE",
    "RET",
    "SLF",
    "SLOT",
    "SIM",
    "TID",
    "TCH",
    "INT",
    "ERA",
    "PGH",
]
ignore = [
    "F821",
    "F841",
    "D100",
    "D107",
    "D211",
    "D212",
    "S301",
    "S311",
    "S603",
    "S605",
    "S607",
    "B008",
    "B028",
    "B905",
    "COM812",
    "ISC001",
    "TC003",
]
exclude = [
    ".bzr", ".direnv", ".eggs", ".git", ".hg", ".mypy_cache", ".nox", ".pants.d", ".pytype", ".ruff_cache", ".svn",
    ".tox", ".venv", "__pypackages__", "_build", "buck-out", "build", "dist", "node_modules", "venv",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.codespell]
skip = "*.pdf,*.ipynb,*.drawio,*.json"

[tool.typos.default.extend-identifiers]
arange = "arange"

[tool.typos.default.extend-words]
Ue = "Ue"
Hashi = "Hashi"

[tool.setuptools]
packages.find = {where = ["src"], include = ["project*"]}
